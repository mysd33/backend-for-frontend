version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto11
    commands:
      - yum install jq
  pre_build:
    commands:      
      - echo Logging in to Amazon ECR...    
      - ECR_URI=523530166249.dkr.ecr.ap-northeast-1.amazonaws.com
      - REPOSITORY_URI=$ECR_URI/mynavi-sample-ecs-bff
      - aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - ECS_TASK_DEFINITION_ARN=Demo-ecstask-frontend-app
  build:
    commands:
      - echo Build started on `date`
      - mvn install
      - echo Docker Build      
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
  #TODO: for taskdef.json auto generate error  
    on-failure: CONTINUE
    commands:
      - echo Build completed on `date`
      - echo ECR Docker Push      
      - docker push $REPOSITORY_URI:latest      
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"ecsdemo-frontend-app","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - printf '{"ImageURI":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
#TODO: taskdef.json auto generate
      - aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION_ARN --query taskDefinition | jq '.containerDefinitions[0].image="<IMAGE1_NAME>"' > taskdef.json
artifacts:
  files:
    #- target/mynavi-sample-aws-ecs-backend-for-frontend-*.jar
    - imagedefinitions.json
    - imageDetail.json
    - taskdef.json
cache:
  paths:
    - '/root/.m2/**/*'  